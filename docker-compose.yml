version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_app
    volumes:
      - ./src:/var/www/html
      - composer_cache:/tmp/composer
      - node_modules:/var/www/html/node_modules
    working_dir: /var/www/html
    networks:
      - laravel
    depends_on:
      - mysql
      - redis-server
    environment:
      - COMPOSER_MEMORY_LIMIT=-1

  web:
    image: nginx:alpine
    container_name: job_web
    ports:
      - "8081:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: job_mysql
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3307:3306" # Adjusted internal port to match MySQL
    environment:
      MYSQL_DATABASE: jobspace
      MYSQL_USER: arif
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - laravel

  redis-server:
    image: redis/redis-stack:latest
    container_name: job_redis_stack
    ports:
      - "6380:6379" # Redis server port (unique for this project)
      - "8011:8001" # Redis-Stack View GUI (unique for this project)
    volumes:
      - ./red_data:/data
    networks:
      - laravel

  node:
    image: node:20
    container_name: job_node
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
    command: tail -f /dev/null

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
  composer_cache:
  node_modules:
  red_data:
